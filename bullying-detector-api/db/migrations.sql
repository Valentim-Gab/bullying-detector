CREATE TABLE USERS (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	LAST_NAME VARCHAR(100),
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	PASSWORD TEXT NOT NULL,
	DATE_BIRTH DATE,
	PHONE_NUMBER VARCHAR(25),
	ROLE varchar(10)[],
	AVATAR TEXT,
	VERIFIED_EMAIL BOOLEAN DEFAULT FALSE
);

CREATE TABLE BULLYING_PHRASE (
	ID_PHRASE SERIAL PRIMARY KEY,
	PHRASE VARCHAR(100),
	USER_DETECT BOOLEAN DEFAULT FALSE,
	IS_BULLYING BOOLEAN DEFAULT TRUE
);

CREATE TABLE DETECTION (
	ID_DETECTION SERIAL PRIMARY KEY,
	RECORDING_AUDIO TEXT,
	MAIN_TEXT TEXT NOT NULL,
	CONTEXT VARCHAR(255),
	MISTRAL_RESULT FLOAT,
	MISTRAL_MESSAGE TEXT,
	COHERE_RESULT FLOAT,
	COHERE_MESSAGE TEXT,
	DEEPSEEK_RESULT FLOAT,
	DEEPSEEK_MESSAGE TEXT,
	DATABASE_RESULT FLOAT,
	DATABASE_USER_DETECT BOOLEAN DEFAULT FALSE,
	DATABASE_USERS_APPROVE INT,
	DATABASE_USERS_REJECT INT,
	SIMILARITY_RESULT FLOAT,
	AVALIATION FLOAT,
	ID_USER INT REFERENCES USERS (ID),
	ID_PHRASE INT REFERENCES BULLYING_PHRASE (ID_PHRASE),
	EXTERNAL_MODULE VARCHAR(50),
	EXTERNAL_ID INT
);

CREATE TABLE VOTE (
	ID_VOTE SERIAL PRIMARY KEY,
	USER_ID INT REFERENCES USERS (ID),
	DETECTION_ID INT REFERENCES DETECTION (ID_DETECTION),
	VOTE BOOLEAN
);

CREATE TABLE AVALIATION (
	ID_AVALIATION SERIAL PRIMARY KEY,
	MAIN_TEXT TEXT
);


SELECT 
	CASE WHEN EXISTS (
		SELECT 1
		FROM BULLYING_PHRASE
		WHERE 'Cara, você é um inútil' ILIKE CONCAT('%', phrase, '%')
	) THEN TRUE
	ELSE FALSE
END AS bullying_detected;
